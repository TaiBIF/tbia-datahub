"""create tables

Revision ID: 79c30e344e15
Revises: 
Create Date: 2023-09-04 08:23:51.205290

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '79c30e344e15'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dataset_key',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=1000), nullable=False),
    sa.Column('record_type', sa.String(length=20), nullable=False),
    sa.Column('group', sa.String(length=100), nullable=False),
    sa.Column('deprecated', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dataset_key_group'), 'dataset_key', ['group'], unique=False)
    op.create_index(op.f('ix_dataset_key_record_type'), 'dataset_key', ['record_type'], unique=False)
    op.create_table('match_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('occurrenceID', sa.String(length=1000), nullable=False),
    sa.Column('tbiaID', sa.String(length=50), nullable=False),
    sa.Column('group', sa.String(length=50), nullable=False),
    sa.Column('sourceScientificName', sa.String(length=1000), nullable=False),
    sa.Column('is_matched', sa.Boolean(), nullable=False),
    sa.Column('taxonID', sa.String(length=10), nullable=True),
    sa.Column('parentTaxonID', sa.String(length=10), nullable=True),
    sa.Column('match_stage', sa.Integer(), nullable=True),
    sa.Column('stage_1', sa.Integer(), nullable=True),
    sa.Column('stage_2', sa.Integer(), nullable=True),
    sa.Column('stage_3', sa.Integer(), nullable=True),
    sa.Column('stage_4', sa.Integer(), nullable=True),
    sa.Column('stage_5', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('modified', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_match_log_group'), 'match_log', ['group'], unique=False)
    op.create_index(op.f('ix_match_log_occurrenceID'), 'match_log', ['occurrenceID'], unique=False)
    op.create_index(op.f('ix_match_log_parentTaxonID'), 'match_log', ['parentTaxonID'], unique=False)
    op.create_index(op.f('ix_match_log_taxonID'), 'match_log', ['taxonID'], unique=False)
    op.create_index(op.f('ix_match_log_tbiaID'), 'match_log', ['tbiaID'], unique=False)
    op.create_table('records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('associatedMedia', sa.String(length=10000), nullable=True),
    sa.Column('basisOfRecord', sa.String(length=1000), nullable=True),
    sa.Column('collectionID', sa.String(length=10000), nullable=True),
    sa.Column('coordinatePrecision', sa.String(length=1000), nullable=True),
    sa.Column('coordinateUncertaintyInMeters', sa.String(length=1000), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('dataGeneralizations', sa.Boolean(), nullable=True),
    sa.Column('datasetName', sa.String(length=10000), nullable=True),
    sa.Column('eventDate', sa.String(length=1000), nullable=True),
    sa.Column('group', sa.String(length=50), nullable=False),
    sa.Column('tbiaID', sa.String(length=50), nullable=False),
    sa.Column('license', sa.String(length=10000), nullable=True),
    sa.Column('locality', sa.String(length=10000), nullable=True),
    sa.Column('location_rpt', sa.String(length=1000), nullable=True),
    sa.Column('raw_location_rpt', sa.String(length=1000), nullable=True),
    sa.Column('mediaLicense', sa.String(length=10000), nullable=True),
    sa.Column('modified', sa.DateTime(timezone=True), nullable=True),
    sa.Column('occurrenceID', sa.String(length=1000), nullable=True),
    sa.Column('organismQuantity', sa.String(length=1000), nullable=True),
    sa.Column('organismQuantityType', sa.String(length=1000), nullable=True),
    sa.Column('originalScientificName', sa.String(length=10000), nullable=True),
    sa.Column('preservation', sa.String(length=10000), nullable=True),
    sa.Column('recordedBy', sa.String(length=10000), nullable=True),
    sa.Column('recordNumber', sa.String(length=10000), nullable=True),
    sa.Column('recordType', sa.String(length=10), nullable=True),
    sa.Column('references', sa.String(length=10000), nullable=True),
    sa.Column('resourceContacts', sa.String(length=10000), nullable=True),
    sa.Column('rightsHolder', sa.String(length=10000), nullable=True),
    sa.Column('selfProduced', sa.Boolean(), nullable=True),
    sa.Column('sensitiveCategory', sa.String(length=100), nullable=True),
    sa.Column('sourceCreated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sourceModified', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sourceScientificName', sa.String(length=10000), nullable=True),
    sa.Column('sourceVernacularName', sa.String(length=10000), nullable=True),
    sa.Column('standardDate', sa.DateTime(timezone=True), nullable=True),
    sa.Column('standardLongitude', sa.Float(), nullable=True),
    sa.Column('standardRawLatitude', sa.Float(), nullable=True),
    sa.Column('standardRawLongitude', sa.Float(), nullable=True),
    sa.Column('standardOrganismQuantity', sa.Float(), nullable=True),
    sa.Column('taxonID', sa.String(length=10), nullable=True),
    sa.Column('parentTaxonID', sa.String(length=10), nullable=True),
    sa.Column('typeStatus', sa.String(length=10000), nullable=True),
    sa.Column('verbatimCoordinateSystem', sa.String(length=10000), nullable=True),
    sa.Column('verbatimLatitude', sa.String(length=10000), nullable=True),
    sa.Column('verbatimLongitude', sa.String(length=10000), nullable=True),
    sa.Column('verbatimRawLatitude', sa.String(length=10000), nullable=True),
    sa.Column('verbatimRawLongitude', sa.String(length=10000), nullable=True),
    sa.Column('verbatimSRS', sa.String(length=10000), nullable=True),
    sa.Column('grid_1', sa.String(length=50), nullable=True),
    sa.Column('grid_5', sa.String(length=50), nullable=True),
    sa.Column('grid_10', sa.String(length=50), nullable=True),
    sa.Column('grid_100', sa.String(length=50), nullable=True),
    sa.Column('scientificNameID', sa.String(length=1000), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_records_created'), 'records', ['created'], unique=False)
    op.create_index(op.f('ix_records_datasetName'), 'records', ['datasetName'], unique=False)
    op.create_index(op.f('ix_records_group'), 'records', ['group'], unique=False)
    op.create_index(op.f('ix_records_modified'), 'records', ['modified'], unique=False)
    op.create_index(op.f('ix_records_occurrenceID'), 'records', ['occurrenceID'], unique=False)
    op.create_index(op.f('ix_records_originalScientificName'), 'records', ['originalScientificName'], unique=False)
    op.create_index(op.f('ix_records_parentTaxonID'), 'records', ['parentTaxonID'], unique=False)
    op.create_index(op.f('ix_records_rightsHolder'), 'records', ['rightsHolder'], unique=False)
    op.create_index(op.f('ix_records_scientificNameID'), 'records', ['scientificNameID'], unique=False)
    op.create_index(op.f('ix_records_sourceCreated'), 'records', ['sourceCreated'], unique=False)
    op.create_index(op.f('ix_records_sourceModified'), 'records', ['sourceModified'], unique=False)
    op.create_index(op.f('ix_records_sourceScientificName'), 'records', ['sourceScientificName'], unique=False)
    op.create_index(op.f('ix_records_sourceVernacularName'), 'records', ['sourceVernacularName'], unique=False)
    op.create_index(op.f('ix_records_taxonID'), 'records', ['taxonID'], unique=False)
    op.create_index(op.f('ix_records_tbiaID'), 'records', ['tbiaID'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_records_tbiaID'), table_name='records')
    op.drop_index(op.f('ix_records_taxonID'), table_name='records')
    op.drop_index(op.f('ix_records_sourceVernacularName'), table_name='records')
    op.drop_index(op.f('ix_records_sourceScientificName'), table_name='records')
    op.drop_index(op.f('ix_records_sourceModified'), table_name='records')
    op.drop_index(op.f('ix_records_sourceCreated'), table_name='records')
    op.drop_index(op.f('ix_records_scientificNameID'), table_name='records')
    op.drop_index(op.f('ix_records_rightsHolder'), table_name='records')
    op.drop_index(op.f('ix_records_parentTaxonID'), table_name='records')
    op.drop_index(op.f('ix_records_originalScientificName'), table_name='records')
    op.drop_index(op.f('ix_records_occurrenceID'), table_name='records')
    op.drop_index(op.f('ix_records_modified'), table_name='records')
    op.drop_index(op.f('ix_records_group'), table_name='records')
    op.drop_index(op.f('ix_records_datasetName'), table_name='records')
    op.drop_index(op.f('ix_records_created'), table_name='records')
    op.drop_table('records')
    op.drop_index(op.f('ix_match_log_tbiaID'), table_name='match_log')
    op.drop_index(op.f('ix_match_log_taxonID'), table_name='match_log')
    op.drop_index(op.f('ix_match_log_parentTaxonID'), table_name='match_log')
    op.drop_index(op.f('ix_match_log_occurrenceID'), table_name='match_log')
    op.drop_index(op.f('ix_match_log_group'), table_name='match_log')
    op.drop_table('match_log')
    op.drop_index(op.f('ix_dataset_key_record_type'), table_name='dataset_key')
    op.drop_index(op.f('ix_dataset_key_group'), table_name='dataset_key')
    op.drop_table('dataset_key')
    # ### end Alembic commands ###
