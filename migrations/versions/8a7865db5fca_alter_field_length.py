"""alter field length

Revision ID: 8a7865db5fca
Revises: d0ba03d75157
Create Date: 2023-10-26 13:52:33.004881

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8a7865db5fca'
down_revision: Union[str, None] = 'd0ba03d75157'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('deleted_records', 'occurrenceID',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.String(length=10000),
               existing_nullable=True)
    op.alter_column('match_log', 'occurrenceID',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.String(length=10000),
               existing_nullable=True)
    op.alter_column('match_log', 'sourceScientificName',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.String(length=10000),
               existing_nullable=True)
    op.alter_column('records', 'basisOfRecord',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.String(length=10000),
               existing_nullable=True)
    op.alter_column('records', 'coordinatePrecision',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.String(length=10000),
               existing_nullable=True)
    op.alter_column('records', 'coordinateUncertaintyInMeters',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.String(length=10000),
               existing_nullable=True)
    op.alter_column('records', 'eventDate',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.String(length=10000),
               existing_nullable=True)
    op.alter_column('records', 'location_rpt',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.String(length=10000),
               existing_nullable=True)
    op.alter_column('records', 'raw_location_rpt',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.String(length=10000),
               existing_nullable=True)
    op.alter_column('records', 'occurrenceID',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.String(length=10000),
               existing_nullable=True)
    op.alter_column('records', 'organismQuantity',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.String(length=10000),
               existing_nullable=True)
    op.alter_column('records', 'organismQuantityType',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.String(length=10000),
               existing_nullable=True)
    op.alter_column('records', 'scientificNameID',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.String(length=10000),
               existing_nullable=True)
    op.alter_column('records', 'sourceTaxonID',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.String(length=10000),
               existing_nullable=True)
    op.alter_column('records', 'sourceOccurrenceID',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.String(length=10000),
               existing_nullable=True)
    op.alter_column('records', 'sourceTaxonRank',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.String(length=10000),
               existing_nullable=True)
    op.alter_column('records', 'sourceFamily',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.String(length=10000),
               existing_nullable=True)
    op.alter_column('records', 'sourceOrder',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.String(length=10000),
               existing_nullable=True)
    op.alter_column('records', 'sourceClass',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.String(length=10000),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('records', 'sourceClass',
               existing_type=sa.String(length=10000),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=True)
    op.alter_column('records', 'sourceOrder',
               existing_type=sa.String(length=10000),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=True)
    op.alter_column('records', 'sourceFamily',
               existing_type=sa.String(length=10000),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=True)
    op.alter_column('records', 'sourceTaxonRank',
               existing_type=sa.String(length=10000),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=True)
    op.alter_column('records', 'sourceOccurrenceID',
               existing_type=sa.String(length=10000),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=True)
    op.alter_column('records', 'sourceTaxonID',
               existing_type=sa.String(length=10000),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=True)
    op.alter_column('records', 'scientificNameID',
               existing_type=sa.String(length=10000),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=True)
    op.alter_column('records', 'organismQuantityType',
               existing_type=sa.String(length=10000),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=True)
    op.alter_column('records', 'organismQuantity',
               existing_type=sa.String(length=10000),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=True)
    op.alter_column('records', 'occurrenceID',
               existing_type=sa.String(length=10000),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=True)
    op.alter_column('records', 'raw_location_rpt',
               existing_type=sa.String(length=10000),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=True)
    op.alter_column('records', 'location_rpt',
               existing_type=sa.String(length=10000),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=True)
    op.alter_column('records', 'eventDate',
               existing_type=sa.String(length=10000),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=True)
    op.alter_column('records', 'coordinateUncertaintyInMeters',
               existing_type=sa.String(length=10000),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=True)
    op.alter_column('records', 'coordinatePrecision',
               existing_type=sa.String(length=10000),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=True)
    op.alter_column('records', 'basisOfRecord',
               existing_type=sa.String(length=10000),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=True)
    op.alter_column('match_log', 'sourceScientificName',
               existing_type=sa.String(length=10000),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=True)
    op.alter_column('match_log', 'occurrenceID',
               existing_type=sa.String(length=10000),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=True)
    op.alter_column('deleted_records', 'occurrenceID',
               existing_type=sa.String(length=10000),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=True)
    # ### end Alembic commands ###
