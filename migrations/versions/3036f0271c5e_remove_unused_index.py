"""remove unused index

Revision ID: 3036f0271c5e
Revises: f06a8937941f
Create Date: 2025-02-26 05:43:18.764166

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3036f0271c5e'
down_revision: Union[str, None] = 'f06a8937941f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_taxon_taxonID', table_name='taxon')
    op.drop_table('taxon')
    op.drop_index('ix_records_is_deleted', table_name='records')
    op.drop_index('ix_records_modified', table_name='records')
    op.drop_index('ix_records_originalVernacularName', table_name='records')
    op.drop_index('ix_records_scientificNameID', table_name='records')
    op.drop_index('ix_records_sourceCreated', table_name='records')
    op.drop_index('ix_records_sourceModified', table_name='records')
    op.drop_index('ix_records_sourceTaxonID', table_name='records')
    op.drop_index('ix_records_taxonID', table_name='records')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('ix_records_taxonID', 'records', ['taxonID'], unique=False)
    op.create_index('ix_records_sourceTaxonID', 'records', ['sourceTaxonID'], unique=False)
    op.create_index('ix_records_sourceModified', 'records', ['sourceModified'], unique=False)
    op.create_index('ix_records_sourceCreated', 'records', ['sourceCreated'], unique=False)
    op.create_index('ix_records_scientificNameID', 'records', ['scientificNameID'], unique=False)
    op.create_index('ix_records_originalVernacularName', 'records', ['originalVernacularName'], unique=False)
    op.create_index('ix_records_modified', 'records', ['modified'], unique=False)
    op.create_index('ix_records_is_deleted', 'records', ['is_deleted'], unique=False)
    op.create_table('taxon',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('taxonID', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('aberration', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('aberration_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('alternative_name_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('class', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('class_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('common_name_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('division', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('division_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('domain', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('domain_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('family', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('family_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('formatted_genus', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('formatted_subgenus', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('formatted_section', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('formatted_subsection', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('formatted_species', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('formatted_subspecies', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('formatted_nothosubspecies', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('formatted_variety', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('formatted_subvariety', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('formatted_nothovariety', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('formatted_form', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('formatted_subform', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('formatted_specialform', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('formatted_race', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('formatted_strip', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('formatted_morph', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('formatted_aberration', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('formatted_hybridformula', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('formatted_name', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('formatted_synonyms', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('formatted_misapplied', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('form', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('form_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('genus', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('genus_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('hybridformula', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('hybridformula_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('infraclass', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('infraclass_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('infradivision', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('infradivision_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('infrakingdom', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('infrakingdom_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('infraorder', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('infraorder_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('infraphylum', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('infraphylum_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('kingdom', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('kingdom_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('microphylum', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('microphylum_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('misapplied', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('morph', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('morph_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('name_author', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('nothosubspecies', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('nothosubspecies_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('nothovariety', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('nothovariety_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('order', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('order_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('parvdivision', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('parvdivision_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('parvphylum', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('parvphylum_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('phylum', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('phylum_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('race', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('race_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('scientificName', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('scientificNameID', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('section', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('section_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('specialform', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('specialform_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('species', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('species_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('stirp', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('stirp_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subclass', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subclass_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subdivision', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subdivision_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subfamily', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subfamily_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subform', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subform_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subgenus', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subgenus_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subkingdom', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subkingdom_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('suborder', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('suborder_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subphylum', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subphylum_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subsection', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subsection_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subspecies', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subspecies_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subtribe', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subtribe_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subvariety', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('subvariety_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('superclass', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('superclass_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('superdivision', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('superdivision_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('superfamily', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('superfamily_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('superkingdom', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('superkingdom_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('superorder', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('superorder_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('superphylum', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('superphylum_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('synonyms', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('taxonRank', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('tribe', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('tribe_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('variety', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('variety_c', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('cites', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('iucn', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('redlist', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('protected', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('sensitive', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('alien_type', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('is_endemic', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_fossil', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_terrestrial', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_freshwater', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_brackish', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_marine', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='taxon_pkey')
    )
    op.create_index('ix_taxon_taxonID', 'taxon', ['taxonID'], unique=False)
    # ### end Alembic commands ###
